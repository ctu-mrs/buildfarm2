name: rostest_merge_to_release

on:
  workflow_call:
    secrets:
      PUSH_TOKEN:
        required: true

  workflow_dispatch:

env:
  VARIANT: testing
  APP_LIST: mrs
  BASE_IMAGE: ctumrs/ros_jazzy:latest
  BUILDER_IMAGE: jazzy_builder_amd_${{github.RUN_ID}}
  ARTIFACTS_FOLDER: /tmp/artifacts

jobs:

  prime-image:
    runs-on: ubuntu-22.04
    env:
      PUSH_TOKEN: ${{secrets.PUSH_TOKEN}}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'recursive'
      - name: Checkout CI scripts
        uses: actions/checkout@v3
        with:
          repository: ctu-mrs/ci_scripts
          ref: ros2
          path: ci_scripts
      - id: prime_image
        run: |
          ./ci_scripts/docker/prime_image_testing/prime_image.sh ${{env.BASE_IMAGE}} ${{env.BUILDER_IMAGE}} ${{env.VARIANT}} ${{env.ARTIFACTS_FOLDER}} ${{github.event.repository.name}}

  build-for-coverage:
    needs: prime-image
    env:
      PUSH_TOKEN: ${{secrets.PUSH_TOKEN}}
    runs-on: ubuntu-22.04
    steps:
      - id: init_artifacts
        run: |
          mkdir -p ${{env.ARTIFACTS_FOLDER}}
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'recursive'
      - name: Checkout CI scripts
        uses: actions/checkout@v3
        with:
          repository: ctu-mrs/ci_scripts
          ref: ros2
          path: ci_scripts
      - id: test
        run: |
          ./scripts/build_for_testing/build.sh ${{env.APP_LIST}} ${{env.VARIANT}} ${{env.BUILDER_IMAGE}} ${{env.ARTIFACTS_FOLDER}}
      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts_workspace
          path: ${{env.ARTIFACTS_FOLDER}}
          overwrite: true

  generate-jobs:
    needs: build-for-coverage
    runs-on: ubuntu-22.04
    outputs:
      packages: ${{ steps.generate.outputs.packages }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'recursive'
      - id: generate
        run: |
          JOB_STRATEGY_MATRIX=$(./scripts/get_test_matrix.sh ${{env.APP_LIST}})
          echo "packages=$JOB_STRATEGY_MATRIX" >> "$GITHUB_OUTPUT"

  test-job:
    needs: generate-jobs
    runs-on: ubuntu-22.04
    timeout-minutes: 360 # 6 hour timeout
    strategy:
      fail-fast: false
      matrix:
        job: ${{ fromJson(needs.generate-jobs.outputs.packages) }}
    env:
      PUSH_TOKEN: ${{ secrets.PUSH_TOKEN }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'recursive'
      - name: Load artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: artifacts_workspace
          merge-multiple: true
          path: ${{env.ARTIFACTS_FOLDER}}
      - name: Checkout CI scripts
        uses: actions/checkout@v3
        with:
          repository: ctu-mrs/ci_scripts
          ref: ros2
          path: ci_scripts
          token: ${{ secrets.PUSH_TOKEN }}
      - id: build
        run: |
          ./scripts/ros_test/run_test.sh ${{env.APP_LIST}} ${{env.VARIANT}} "${{matrix.job}}" ${{env.BUILDER_IMAGE}} ${{env.ARTIFACTS_FOLDER}}
          rm ${{env.ARTIFACTS_FOLDER}}/workspace.tar.gz
      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts_${{matrix.job}}
          path: ${{env.ARTIFACTS_FOLDER}}
          overwrite: true

  merge-and-push:
    runs-on: ubuntu-22.04
    needs: test-job
    env:
      PUSH_TOKEN: ${{ secrets.PUSH_TOKEN }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'recursive'
      - id: merge
        run: |
          ./scripts/merge_push_to_release.sh

  publish-coverage:
      runs-on: ubuntu-22.04
      needs: test-job
      steps:
        - name: Load artifacts
          uses: actions/download-artifact@v4
          with:
            pattern: artifacts_*
            merge-multiple: true
            path: ${{env.ARTIFACTS_FOLDER}}
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0
            submodules: 'recursive'
        - name: Checkout CI scripts
          uses: actions/checkout@v3
          with:
            repository: ctu-mrs/ci_scripts
            ref: ros2
            path: ci_scripts
        - id: test
          run: |
            ls -la ${{env.ARTIFACTS_FOLDER}}
            ./scripts/publish_coverage.sh ${{env.ARTIFACTS_FOLDER}}
        - name: Deploy
          uses: peaceiris/actions-gh-pages@v3
          with:
            github_token: ${{secrets.PUSH_TOKEN}}
            publish_dir: /tmp/coverage_html
            allow_empty_commit: true
            force_orphan: true

  delete-builder:
    needs: test-job
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Delete old images
        uses: dataaxiom/ghcr-cleanup-action@v1
        with:
          packages: '${{github.event.repository.name}}'
          older-than: 7 days
          keep-n-tagged: 1
          token: ${{secrets.PUSH_TOKEN}}
