name: unstable_thirdparty_dockers_amd64

on:
  workflow_dispatch:

  schedule:
    - cron:  '0 15 * * *'

  # push:
  #   branches:
  #     - master

concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true

env:
  VARIANT: unstable
  APP_LIST: thirdparty

jobs:

  generate-jobs:
    runs-on: ubuntu-22.04
    outputs:
      packages: ${{ steps.generate.outputs.packages }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'recursive'
      - name: Checkout CI scripts
        uses: actions/checkout@v3
        with:
          repository: ctu-mrs/ci_scripts
          ref: ros2
          path: ci_scripts
          token: ${{secrets.PUSH_TOKEN}}
      - id: generate
        run: |
          JOB_STRATEGY_MATRIX=$(./scripts/get_docker_build_matrix.sh ${{env.APP_LIST}} ${{env.VARIANT}})
          echo "packages=$JOB_STRATEGY_MATRIX" >> "$GITHUB_OUTPUT"

  build-job:
    needs: generate-jobs
    runs-on: ubuntu-22.04
    timeout-minutes: 360 # 6 hour timeout
    strategy:
      matrix:
        job: ${{ fromJson(needs.generate-jobs.outputs.packages) }}
      # max-parallel: 1 # Run jobs serially
    env:
      PUSH_TOKEN: ${{secrets.PUSH_TOKEN}}
      DOCKERHUB: ${{secrets.DOCKERHUB}}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'recursive'
      - name: Checkout CI scripts
        uses: actions/checkout@v3
        with:
          repository: ctu-mrs/ci_scripts
          ref: ros2
          path: ci_scripts
          token: ${{secrets.PUSH_TOKEN}}
      - id: build
        run: |
          ./scripts/docker_build/build.sh ${{env.APP_LIST}} ${{env.VARIANT}} "${{matrix.job}}" ./docker ctumrs/ros_jazzy:latest
